class Solution {
public:
    int maximalSquare(vector<vector<char>>& matrix) {
        vector<vector<int>> dpm(matrix.size(), vector<int>(matrix[0].size(),0));
        
        for(int i = 0;i<matrix[0].size();i++){
            if(matrix[0][i]=='1'){
                dpm[0][i] = 1;
            }
        }
        
        
        for(int j = 0;j<matrix.size();j++){
            if(matrix[j][0]=='1'){
                dpm[j][0] = 1;
            }
        }
        
        
        for(int i = 1;i<matrix.size();i++){
            for(int j = 1;j<matrix[0].size();j++){
                if(matrix[i][j]=='1'){
                    dpm[i][j] = min(dpm[i-1][j],min(dpm[i][j-1],dpm[i-1][j-1])) +1;
                    cout<<dpm[i][j]<<i<<j<<endl;
                }
            }   
        }
        int result = 0;
        for(int i = 0;i<matrix.size();i++){
            for(int j = 0;j<matrix[0].size();j++){
                result = max(dpm[i][j],result);
            }   
        }
        
        return result*result;
        
    }
};
